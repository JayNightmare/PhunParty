name: Web Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths: [ 'web-host-ui/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'web-host-ui/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'web-host-ui/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd web-host-ui
        npm ci
    
    - name: Lint code
      run: |
        cd web-host-ui
        npm run lint
    
    - name: Type check
      run: |
        cd web-host-ui
        npm run type-check
    
    - name: Run tests
      run: |
        cd web-host-ui
        npm test -- --coverage --watchAll=false
    
    - name: Build application
      run: |
        cd web-host-ui
        npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./web-host-ui/coverage
        flags: frontend-web
        name: frontend-web-coverage
        fail_ci_if_error: false
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: web-host-ui/build/
        retention-days: 7

  lighthouse:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'web-host-ui/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd web-host-ui
        npm ci
    
    - name: Build application
      run: |
        cd web-host-ui
        npm run build
    
    - name: Serve and run Lighthouse
      run: |
        cd web-host-ui
        npm install -g @lhci/cli@0.12.x
        npm install -g serve
        serve -s build -p 3000 &
        sleep 5
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'web-host-ui/package-lock.json'
    
    - name: Install and build
      run: |
        cd web-host-ui
        npm ci
        npm run build
    
    - name: Deploy to staging
      run: |
        echo "Deploy web frontend to staging"
        # Add your staging deployment commands here
        # Example: deploy to Netlify, Vercel, or other hosting platform

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'web-host-ui/package-lock.json'
    
    - name: Install and build
      run: |
        cd web-host-ui
        npm ci
        npm run build
    
    - name: Deploy to production
      run: |
        echo "Deploy web frontend to production"
        # Add your production deployment commands here
